1)Number of customer service phone calls  2)sum of Number of employees that each of our Customers have  3)The number of customer service phone calls divided by the total number of our customer’s employees (ie if we had 10 customers with 10 employees it would be 100)  4) What software feature the customer service call is about.   I want to measure if improving a software feature has reduced the number of phone calls related to that feature.   Currently my approach ( if we could start by just aligning on this before contemplating super fancy ways ) is just the number of calls over the sum number of all customer employees(before filtering down by feature type ).   Question 1) So first if I wanted to set an overall goal for 2020 that is saying we want a 5% reduction is customer service calls (across all features ) and I used a time series / exponential smoothing method to forecast how many calls there will be in 2020 and how many new units , by day. At first I was like should just do 5% less than the number of calls % number of customers or should I do 5% less only to the number of calls only and then divide that by the number of customers ? The 5% less being “ hey this was our forecast ie what we thought we would have but since we’re investing in making better software we should have 5% less customer service calls “. Just not sure if I should change the total number of new customers forecast to be down 5%.    Question 2) If I want to filter by a certain feature , Let’s the say log in page feature. And I want to know when we built a new ui for it , Did that reduce customer service calls. Should i have that filter for customer calls related to login over the total amount of customers in total or over the number of customer employees within that pool of customers who reached out regarding log in (ie if 3 different customers with 10 employees reached out then it would be 3 calls over 30. Vs 3 calls over 100 [assuming I have 10 customers in total with 10 employees])